@model SimpleVote.UI.Models.ViewModels.ReportViewModel
@{
    ViewData["Title"] = "Form Report";
}

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="~/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/CreateForm.css">
    <link href="~/css/site.css" rel="stylesheet" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js"></script>
</head>


<script src="~/js/fromHtmlEntities.js" asp-append-version="true"></script>

<div class="text-center">
    <h4 class="display-4">@Model.FormTitle</h4>
    <h3><a href="~/Home/MyForms">Back</a></h3>
    <h5>Всього учасників: @Model.Questions[0].Votes.ToList().Count</h5>
    @foreach (var item in Model.Questions)
    {
        <h5>@item.Title</h5>
        <h6>Тип питання: @item.Type</h6>
        @if (item.Type == "3" || item.Type == "4")
        {
            @foreach (var i in item.Votes)
            {
                <div>@i.SubmitedAnswer</div>
            }
        }
        else
        {
            @foreach (var i in item.Answers)
            {
                <div>@i.Value</div>
            }
            <div class="card">
                <div class="card-header">
                    <div class="chart">
                        <canvas id="polarChart-@item.Id"></canvas>
                    </div>
                </div>
            </div>
            <script>

                var polarChartCanvas = document.getElementById("polarChart-@item.Id");
                
                var answers = [];
                var score = [];

                @foreach (var _item in item.Answers)
                {
                    int currScore = 0;
                    if (item.Type == "2")
                    {
                        var votes = item.Votes;
                        foreach (var vote in votes)
                        {
                            var strs = vote.SubmitedAnswer.Split("///");
                            foreach (var str in strs)
                            {
                                if (str == _item.Value)
                                {
                                    currScore++;
                                }
                            }
                        }
                    }
                    else
                    {
                        currScore = item.Votes.Where(x => x.SubmitedAnswer == _item.Value).Count();
                    }
                    @:var currscore = @currScore;
                    @:var str = "@_item.Value";
                    @:var newstr = decodeHTMLEntities(str);
                    @:answers.push(newstr);
                    @:score.push(currscore);
                }
                

                var doughnutChart = new Chart(polarChartCanvas, {
                    type: 'polarArea',
                    data: {
                        labels: answers,
                    datasets: [{
                        data: score,
                        borderWidth: 0,
                        backgroundColor: [
                            'rgb(255, 99, 132)',
                            'rgb(54, 162, 235)',
                            'rgb(157, 230, 41)',
                            'rgb(41, 224, 230)',
                            'rgb(255, 255, 0)'
                        ],
                        hoverBackgroundColor: [
                            'rgb(255, 99, 132)',
                            'rgb(54, 162, 235)',
                            'rgb(157, 230, 41)',
                            'rgb(41, 224, 230)',
                            'rgb(255, 255, 0)'
                        ]
                    }]
                },
                    options: {
                        scale: {
                            ticks: {
                                display: true,
                                stepSize: 1
                            }
                        },
                        legend: {
                            position: "bottom",
                            labels: {
                                boxWidth: 11,
                                fontColor: "#757681",
                                fontSize: 11
                            }
                        }
                    }
                });
            
            
            
            </script>
        }
    }
</div>
